{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf110
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 - CUDA: a parallel computing platform \'97> GPU computing\
- Torch: framework of NN\
\
1. Preprocess input image data (RGB \'97> YUV)\
2. Normalize the input images (Gaussian distribution for fast leaning)\
3. Perform convolution on input image (Edge detection)\
4. Train the convolutional neural network model (Optimization)\
5. Feed an image \'97> Go through step 1 & 3 \'97> Display classification category with confidence score\
\
Dependencies:\
- able to process large volume of data (1 TB)\
- flexible for scaling and configuration\
\
Derivatives:\
- output for each stage to visualize the processing process\
- classify and categorize multiple objects from a single imag}